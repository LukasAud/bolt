name: Forward PR to bolt-private

on:
  workflow_dispatch:
  pull_request:
    types: [closed]
    branches: [main]

jobs:
  forward:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest

    steps:
    - name: Checkout bolt
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Set up variables
      id: vars
      run: |
        echo "pr_number=${{ github.event.pull_request.number }}" >> $GITHUB_OUTPUT
        echo "pr_title=${{ github.event.pull_request.title }}" >> $GITHUB_OUTPUT
        echo "pr_branch=forward-pr-${{ github.event.pull_request.number }}" >> $GITHUB_OUTPUT

    - name: Download PR patch
      run: |
        PATCH_URL="https://github.com/${{ github.repository }}/pull/${{ steps.vars.outputs.pr_number }}.patch"
        echo "Downloading patch from $PATCH_URL"
        curl -sSL -w "%{http_code}" -o pr.patch "$PATCH_URL" > status.txt
        status=$(cat status.txt)
        if [ "$status" -ne 200 ]; then
          echo "‚ùå Failed to download patch. HTTP status code: $status"
          cat pr.patch || true
          exit 1
        fi

    - name: Show patch summary
      run: |
        echo "---- PATCH START ----"
        cat pr.patch
        echo "\n---- PATCH END ----"
        

    - name: Clone bolt-private
      run: |
        git clone https://x-access-token:${{ secrets.PRIVATE_REPO_PAT }}@github.com/LukasAud/bolt-private.git ../bolt-private

    - name: Configure Git identity
      run: |
        git config --global user.name "GitHub Actions"
        git config --global user.email "actions@github.com"
        
    - name: Apply patch to private repo (force even with conflicts)
      run: >
        cd ../bolt-private
        git checkout -b ${{ steps.vars.outputs.pr_branch }}
    
        echo "üîÅ Trying to apply patch using git am..."
        if git am ../bolt/pr.patch; then
          echo "‚úÖ Patch applied cleanly using git am"
        else
          echo "‚ö†Ô∏è git am failed ‚Äî falling back to manual apply"
    
          patch_files=$(grep '^diff --git' ../bolt/pr.patch | awk '{print $3}' | cut -c3-)
          for file in $patch_files; do
            if [ ! -f "$file" ]; then
              echo "üìÑ Creating placeholder for missing file: $file"
              mkdir -p "$(dirname "$file")"
              touch "$file"
            fi
          done
    
          echo "üìå Applying patch with git apply --reject..."
          git apply --reject --whitespace=fix ../bolt/pr.patch || echo "‚ö†Ô∏è Patch had partial conflicts"
    
          echo "üìù Creating conflict note"
          cat <<EOF > CONFLICT_NOTE.md
          ‚ö†Ô∏è This PR was generated automatically by forwarding PR #${{ steps.vars.outputs.pr_number }} from the public repository.
          
          One or more conflicts occurred when applying the patch. The full patch has been added, but could not be cleanly applied.
          
          Please manually review and implement the changes described in the patch file.
          
          ‚ö†Ô∏è **Do NOT merge this PR as-is.** Once the patch is implemented manually, you may remove this notice.
          EOF
    
          git add -A
    
          if git diff --cached --quiet; then
            echo "‚ö†Ô∏è Patch applied nothing ‚Äî creating dummy commit to allow PR"
            git commit --allow-empty -m "Forwarded PR #${{ steps.vars.outputs.pr_number }} (empty or conflict)"
          else
            git commit -m "Forwarded PR #${{ steps.vars.outputs.pr_number }} with manual conflict resolution required"
          fi
        fi 

    - name: Push and create PR
      run: |
        cd ../bolt-private
        git push origin ${{ steps.vars.outputs.pr_branch }}
        gh pr create \
          --title "[Forwarded] ${{ steps.vars.outputs.pr_title }}" \
          --body "This PR is an automated forward of https://github.com/${{ github.repository }}/pull/${{ steps.vars.outputs.pr_number }}.
    
            If there were conflicts applying the patch, it has been saved in the working directory as a rejected diff. **Do not merge this PR** if it contains unresolved conflicts ‚Äî instead, manually apply the patch by reviewing the `.rej` or `.patch` file and implementing the necessary changes in your local environment.
            
            Please reach out to the original author if needed." \
          --head ${{ steps.vars.outputs.pr_branch }} \
          --base main
      env:
        GH_TOKEN: ${{ secrets.PRIVATE_REPO_PAT }}
